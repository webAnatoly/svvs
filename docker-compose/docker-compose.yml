version: '3.1'

# Using the “--env-file” option
# By passing the file as an argument, you can store it anywhere and name it appropriately,
# for example, .env.ci, .env.dev, .env.prod. Passing the file path is done using the --env-file option:
# docker compose --env-file ./config/.env.dev up

# Еще пример с указание путей к файлу docker-compose.yml и к файлу переменных окружения
# docker-compose --file=docker-compose/docker-compose.yml --env-file=.env_configs/.env.development.local up

services:
  postgres:
    image: postgres:13-alpine
    hostname: ${DB_HOST_NAME}
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - backend

volumes:
  postgres-data:
  pgadmin-data:

networks:
  backend:
